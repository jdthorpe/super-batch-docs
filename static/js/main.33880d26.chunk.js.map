{"version":3,"sources":["pages/code-blocks/tab-code-block.tsx","pages/code-blocks/create-resources/index.tsx","pages/code-blocks/gather-credentials/index.tsx","pages/code-blocks/using-acr/index.tsx","pages/code-block.tsx","pages/styled-markdown.tsx","pages/azure-resources/index.tsx","nav-list.tsx","drawer.tsx","pages/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["TabPanel","props","children","value","index","other","Typography","component","role","hidden","id","aria-labelledby","useStyles","makeStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","padding","paddingLeft","paddingRight","borderRadius","tabs","justifyContent","active","color","tab","minWidth","icon","display","appbar","borderTopLeftRadius","borderTopRightRadius","alignItems","flexDirection","code","marginTop","buttonMargin","margin","spacing","createMuiTheme","overrides","MuiTab","maxHeight","primary","main","secondary","text","contrastThreshold","CodeTabs","classes","useState","justCopied","setJustCopied","edit","setEdit","show","setShow","blocks","map","x","setCode","activeTab","setActiveTab","Box","p","className","ThemeProvider","AppBar","position","Tabs","style","width","onChange","event","newValue","setValue","aria-label","Label","Tab","label","a11yProps","key","IconButton","size","onClick","fontSize","clsx","newCode","block","copy","then","setTimeout","language","options","mode","onBeforeChange","e","d","v","i","val","handleCodeChange","CreateResources","GatherCredentials","UsingACR","editStyles","createStyles","height","inner","dialog","dialogCM","overflow","header","filename","fontStyle","marginBlockStart","marginBlockEnd","ButtonNames","CodeBlock","lines","split","slice","join","open","setOpen","startsWith","commands","buttons","filter","includes","length","handleCopy","Dialog","onClose","StyledMarkdown","plugins","toc","renderers","AzureResources","React","source","drawer","paddingTop","item","borderLeft","boxSizing","type","grey","itemSecondary","ul","listStyle","textDecoration","nested","link","CODE_PAGES","withRouter","console","log","dir","to","location","pathname","ListItemText","Collapse","in","timeout","unmountOnExit","name","nav","breakpoints","up","flexShrink","toolbar","mixins","drawerPaper","ResponsiveDrawer","useTheme","Hidden","smUp","implementation","Drawer","variant","anchor","direction","toggleOpen","ModalProps","keepMounted","xsDown","API","build","CleanUp","Refactoring","Controller","Docker","FAQ","Overview","Worker","useEffect","Prism","highlightAll","escapeHtml","menuButton","marginRight","appBar","zIndex","toolbarOption","marginLeft","logo","overflowX","down","App","mobileOpen","setMobileOpen","handleDrawerToggle","basename","process","CssBaseline","href","target","Toolbar","edge","noWrap","exact","path","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.33880d26.chunk.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport copy from \"clipboard-copy\"\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport RefreshIcon from '@material-ui/icons/Refresh';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport clsx from \"clsx\"\n\n\nconst TabPanel: FC<{ value: number, index: number }> = (props) => {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </Typography>\n    );\n}\n\n\nfunction a11yProps(index: number) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        \"& .CodeMirror\": {\n            \"height\": \"auto\",\n            padding: \"0.125rem\",\n            paddingLeft: \"0.2rem\",\n            paddingRight: \"0.2rem\",\n            borderRadius: \"0.5rem\"\n        }\n    },\n    tabs: {\n        justifyContent: \"space-between\"\n    },\n    active: {\n        color: \"#4785ff\",\n    },\n    tab: {\n        minWidth: \"50px\"\n    },\n    icon: {\n        paddingRight: \"1rem\",\n        display: \"flex\",\n        justifyContent: \"center\"\n    },\n    appbar: {\n        borderTopLeftRadius: \"0.3rem\",\n        borderTopRightRadius: \"0.3rem\",\n        alignItems: \"center\",\n        flexDirection: \"row\",\n        justifyContent: \"space-between\"\n    },\n    code: {\n        marginTop: \"-10px\",\n\n        ' pre': {\n            borderTopLeftRadius: \"0px\",\n            borderTopRightRadius: \"0px\",\n        }\n    },\n    buttonMargin: {\n        margin: theme.spacing(0.5),\n    },\n}));\n\n\nconst theme = createMuiTheme({\n    overrides: {\n        MuiTab: {\n            root: {\n                maxHeight: 32\n            }\n        }\n    },\n    palette: {\n        primary: {\n            main: '#ddd',\n        },\n        secondary: {\n            main: '#ff63e5',\n        },\n        text: {\n            primary: \"#ff63e5\",\n            secondary: \"#ff63e5\",\n        },\n\n        contrastThreshold: 3,\n    }\n\n});\n\ninterface IProps {\n    blocks: [string, string, string][], // [label, language, code]\n    value: number,\n    setValue: { (x: number): void }\n}\n\nexport default function CodeTabs(props: IProps) {\n    const classes = useStyles();\n    const [justCopied, setJustCopied] = useState<boolean>(false);\n    const [edit, setEdit] = useState<boolean>(false);\n    const [show, setShow] = useState<boolean>(false);\n    const [code, setCode] = useState<string[]>(props.blocks.map(x => x[2]))\n    const [activeTab, setActiveTab] = useState<number>(0)\n\n    const handleCodeChange = (i: number, val: string) => {\n        const newCode = [...code];\n        newCode[i] = val\n        setCode(newCode)\n\n    }\n\n    const handleChange = (event: any/*Material UI ChagneEvent*/, newValue: number) => {\n        setActiveTab(newValue)\n        props.setValue(newValue);\n    };\n\n    const handleReset = () => {\n        const newCode = [...code];\n        newCode[activeTab] = props.blocks[activeTab][2]\n        setCode(newCode)\n    }\n\n\n    const handleCopy = () => {\n        const block: string = props.blocks[props.value][2];\n        copy(block).then(() => {\n            setJustCopied(true);\n            setTimeout(() => setJustCopied(false), 4000);\n        })\n    }\n\n    return (\n        <Box p={2} className={classes.root}>\n\n            <ThemeProvider theme={theme}>\n                <AppBar position=\"static\" className={classes.appbar}>\n\n                    <Tabs value={props.value}\n                        style={{ width: \"calc(100% - 44px)\" }}\n                        onChange={handleChange}\n                        aria-label=\"simple tabs example\">\n\n                        {props.blocks.map(([Label,], index) => (\n                            <Tab\n                                label={Label}\n                                color={\"secondary\"}\n                                {...a11yProps(index)}\n                                className={classes.tab}\n                                key={index} />\n                        ))}\n                    </Tabs>\n                    <IconButton\n                        aria-label=\"fullscreen\"\n                        className={classes.buttonMargin}\n                        size=\"small\"\n                        onClick={() => setShow(!show)}>\n                        <FullscreenIcon fontSize=\"inherit\" />\n                    </IconButton>\n\n                    <IconButton\n                        aria-label=\"edit\"\n                        className={clsx(classes.buttonMargin, edit ? classes.active : null)}\n                        size=\"small\"\n                        onClick={() => setEdit(!edit)}>\n                        <EditIcon fontSize=\"inherit\" />\n                    </IconButton>\n\n                    <IconButton\n                        aria-label=\"edit\"\n                        className={classes.buttonMargin}\n                        size=\"small\"\n                        onClick={handleReset}>\n                        <RefreshIcon fontSize=\"inherit\" />\n                    </IconButton>\n\n                    <IconButton\n                        aria-label=\"edit\"\n                        className={classes.buttonMargin}\n                        size=\"small\"\n                        onClick={handleCopy}>\n\n                        {justCopied ?\n                            <CheckCircleOutlineIcon fontSize=\"small\" />\n                            : <FileCopyIcon fontSize=\"small\" />}\n\n                    </IconButton>\n                </AppBar>\n            </ThemeProvider>\n            {props.blocks.map(([, language,], index) => (\n                <TabPanel value={props.value} index={index} key={index}>\n                    <CodeMirror\n                        options={{\n                            mode: language,\n                            theme: \"monokai\"\n                        }}\n                        onBeforeChange={(e, d, v) => { if (edit) { handleCodeChange(index, v) } }}\n                        value={code[index]}\n                    />\n                </TabPanel>\n            ))}\n        </Box>\n    );\n}","import React from \"react\"\nimport CodeTabs from \"../tab-code-block\"\nimport raw from \"raw.macro\"\nconst cmd = raw(\"./cmd.bat\")\nconst bash = raw(\"./bash.sh\")\nconst powershell = raw(\"./powershell.ps1\")\n\ninterface IProps {\n    value: number,\n    setValue: { (x: number): void }\n}\n\nexport function CreateResources(props: IProps) {\n\n    return <CodeTabs blocks={[\n        [\"bash\",\"shell\", bash],\n        [\"Powershell\",\"powershell\",  powershell],\n        [\"CMD\",\"shell\",  cmd]\n    ]} { ...props} />\n}\n\nexport default CreateResources\n","import React from \"react\"\nimport CodeTabs from \"../tab-code-block\"\nimport raw from \"raw.macro\"\nconst cmd = raw(\"./cmd.bat\")\nconst bash = raw(\"./bash.sh\")\nconst powershell = raw(\"./powershell.ps1\")\n\ninterface IProps {\n    value: number,\n    setValue: { (x: number): void }\n}\n\nexport function GatherCredentials(props: IProps) {\n\n    return <CodeTabs blocks={[\n        [\"bash\",\"shell\", bash],\n        [\"Powershell\",\"powershell\",  powershell],\n        [\"CMD\",\"shell\",  cmd]\n    ]}  {...props} />\n}\n\nexport default GatherCredentials\n","import React from \"react\"\nimport CodeTabs from \"../tab-code-block\"\nimport raw from \"raw.macro\"\nconst cmd = raw(\"./cmd.bat\")\nconst bash = raw(\"./bash.sh\")\nconst powershell = raw(\"./powershell.ps1\")\n\ninterface IProps {\n    value: number,\n    setValue: { (x: number): void }\n}\n\nexport function UsingACR(props: IProps) {\n\n    return <CodeTabs blocks={[\n        [\"bash\",\"shell\", bash],\n        [\"Powershell\",\"powershell\",  powershell],\n        [\"CMD\",\"shell\",  cmd]\n    ]} { ...props}/>\n}\n\nexport default UsingACR\n","import React, { useState } from \"react\"\nimport copy from \"clipboard-copy\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\n\nimport { Controlled as CodeMirror } from 'react-codemirror2';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport FullscreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport Dialog from '@material-ui/core/Dialog';\n\nimport 'codemirror/mode/shell/shell'\nimport 'codemirror/mode/python/python'\nimport 'codemirror/mode/powershell/powershell'\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/monokai.css';\n\nconst editStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            backgroundColor: \"#eee\",\n            borderRadius: \"0.3rem\",\n            \"& .CodeMirror\": {\n                height: \"auto\",\n                padding: \"0.125rem\",\n                paddingLeft: \"0.2rem\",\n                paddingRight: \"0.2rem\",\n                borderRadius: \"0.3rem\"\n            }\n        },\n        inner:{\n            height:\"calc(100% - 64px)\",\n            position:\"relative\",\n        },\n        dialog: {\n            minWidth: \"80vw\",\n            backgroundColor: \"#fff\",\n            \"& .CodeMirror\": {\n                height: \"auto\",\n                padding: \"0.125rem\",\n                paddingLeft: \"0.2rem\",\n                paddingRight: \"0.2rem\",\n            }\n        },\n        dialogCM: {\n            overflow: \"auto\",\n            maxHeight:\"calc(100vh - 96px)\"\n        },\n        header: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\",\n            paddingRight: \"1rem\",\n            paddingLeft: \"1rem\"\n        },\n        filename: {\n            fontStyle: \"italic\",\n            \"& p\": {\n                marginBlockStart: \"0\",\n                marginBlockEnd: \"0\",\n            }\n        },\n        buttonMargin: {\n            margin: theme.spacing(0.5),\n        },\n    }),\n);\n\n\n\n\nconst ButtonNames = [\"edit\", \"show\", \"copy\",]\n\ninterface ICodeProps { language: string, value: string }\n\nconst CodeBlock: React.FC<ICodeProps> = (props) => {\n\n    const lines: string[] = props.value.split(\"\\n\")\n    const [value, setValue] = useState<string>(lines.slice(1).join(\"\\n\"));\n    const [edit, setEdit] = useState<boolean>(false);\n    const [justCopied, setJustCopied] = useState<boolean>(false);\n    const classes = editStyles()\n\n    // dialog: \n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleClose = () => { setOpen(false) }\n\n    if (!props.value.startsWith(\"#!\")) {\n        return (<CodeMirror\n            options={{\n                mode: props.language === \"python\" ? props.language : \"shell\",\n                theme: \"monokai\"\n            }}\n            onBeforeChange={() => { /*pass*/ }}\n            value={props.value} />)\n    }\n    const commands: string[] = lines[0].split(/\\s+/)\n    const buttons: string[] = commands.filter(x => ButtonNames.includes(x))\n    const filename: string | null = commands[1].includes(\".\") ? commands[1] : null\n\n\n    if (filename === null && !buttons.length) {\n        return (<CodeMirror\n            options={{\n                mode: props.language === \"python\" ? props.language : \"shell\",\n                theme: \"monokai\"\n            }}\n            onBeforeChange={() => { /*pass*/ }}\n            value={props.value} />)\n    }\n\n    const handleCopy = () => {\n        copy(value).then(() => {\n            setJustCopied(true);\n            setTimeout(() => setJustCopied(false), 2500);\n        })\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.header}>\n                <div className={classes.filename}>\n                    {filename ? <p>{filename}</p> : null}\n                </div>\n                <div>\n                    {buttons.includes(\"show\") ?\n                        <IconButton\n                            aria-label=\"fullscreen\"\n                            className={classes.buttonMargin}\n                            size=\"small\"\n                            onClick={() => setOpen(!open)}>\n                            <FullscreenIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        : null}\n                    {buttons.includes(\"copy\") ?\n                        <IconButton\n                            aria-label=\"copy\"\n                            className={classes.buttonMargin}\n                            size=\"small\"\n                            onClick={handleCopy}>\n                            {justCopied ?\n                                <CheckCircleOutlineIcon fontSize=\"inherit\" />\n                                : <FileCopyIcon fontSize=\"inherit\" />}\n                        </IconButton>\n                        : null}\n                    {buttons.includes(\"edit\") ?\n                        <IconButton\n                            aria-label=\"edit\"\n                            className={classes.buttonMargin}\n                            size=\"small\"\n                            onClick={() => setEdit(!edit)}>\n                            <EditIcon fontSize=\"inherit\" />\n                        </IconButton>\n                        : null}\n                </div>\n            </div>\n            <CodeMirror\n                options={{\n                    mode: props.language === \"python\" ? props.language : \"shell\",\n                    theme: \"monokai\"\n                }}\n                onBeforeChange={(e, d, v) => { if (edit) { setValue(v) } }}\n                value={value} />\n            {buttons.includes(\"show\") ?\n                <Dialog\n                    className={classes.dialog}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-dialog-title\"\n                    open={open}\n                >\n\n                    <div className={classes.inner}>\n                        <div className={classes.header}>\n                            <div className={classes.filename}>\n                                {filename ? <p>{filename}</p> : null}\n                            </div>\n                            <div>\n                                {buttons.includes(\"show\") ?\n                                    <IconButton\n                                        aria-label=\"fullscreen\"\n                                        className={classes.buttonMargin}\n                                        size=\"small\"\n                                        onClick={() => setOpen(!open)}>\n                                        <FullscreenExitIcon fontSize=\"inherit\" />\n                                    </IconButton>\n                                    : null}\n                                {buttons.includes(\"copy\") ?\n                                    <IconButton\n                                        aria-label=\"copy\"\n                                        className={classes.buttonMargin}\n                                        size=\"small\"\n                                        onClick={handleCopy}>\n                                        {justCopied ?\n                                            <CheckCircleOutlineIcon fontSize=\"inherit\" />\n                                            : <FileCopyIcon fontSize=\"inherit\" />}\n                                    </IconButton>\n                                    : null}\n                                {buttons.includes(\"edit\") ?\n                                    <IconButton\n                                        aria-label=\"edit\"\n                                        className={classes.buttonMargin}\n                                        size=\"small\"\n                                        onClick={() => setEdit(!edit)}>\n                                        <EditIcon fontSize=\"inherit\" />\n                                    </IconButton>\n                                    : null}\n                            </div>\n                        </div>\n                        <div className={classes.dialogCM}>\n\n                            <CodeMirror\n                                options={{\n                                    mode: props.language === \"python\" ? props.language : \"shell\",\n                                    theme: \"monokai\"\n                                }}\n                                onBeforeChange={(e, d, v) => { if (edit) { setValue(v) } }}\n                                value={value} />\n                        </div>\n                    </div>\n\n                </Dialog> : null}\n        </div>)\n}\n\nexport default CodeBlock","import React, { } from \"react\"\nimport ReactMarkdown, { ReactMarkdownProps } from 'react-markdown'\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport toc from \"remark-toc\"\nimport CodeBlock from \"./code-block\"\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            \"& p code\": {\n                backgroundColor: \"#cadceb\",\n                padding: \"0.125rem\",\n                paddingLeft: \"0.2rem\",\n                paddingRight: \"0.2rem\",\n                borderRadius: \"0.2rem\"\n            },\n            \"& .CodeMirror\": {\n                \"height\": \"auto\",\n                padding: \"0.125rem\",\n                paddingLeft: \"0.2rem\",\n                paddingRight: \"0.2rem\",\n                borderRadius: \"0.5rem\"\n\n            }\n        }\n    }),\n);\n\nconst StyledMarkdown: React.FC<ReactMarkdownProps> = (props) => {\n    const classes = useStyles()\n    return (<div className={classes.root}>\n        <ReactMarkdown {...props} plugins={[toc]} renderers={{ \"code\": CodeBlock }} />\n    </div>)\n}\n\nexport default StyledMarkdown\n","import React from \"react\"\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport { CreateResources, GatherCredentials, UsingACR } from \"../code-blocks\"\nimport StyledMarkdown from \"../styled-markdown\"\nimport raw from \"raw.macro\"\n// import ReactMarkdown from 'react-markdown'\nconst tip = raw(\"./tip.md\")\n\nconst INTRO = `\n# Creating Azure Resources\n\nAfter logging into the console with \\`az login\\` (and potentially setting the default\nsubscription with \\`az account set -s <subscription>\\`), you'll need to create a\nresource group into which the batch account is created. In addition, the\nazure batch service requires a storage account which is used to keep track of\ndetails of the jobs and tasks.\n\nAlthough the resource group, storage account and batch account could have\ndifferent names, for sake of exposition, we'll give them all the same name\nand locate them in the US West 2 region. Since we're using the \\`name\\` for\nparameter for the resource group, storage account and batch account, it must\nconsist of 3-24 lower case, letters and be unique across all of azure\n`\n\nconst GATHER_CREDENTIALS = `\n## Gather Resource Credentials\n\nIn order to execute tasks in Azure batch, credentials for each of the\nrequired Azure resources (e.g. azure batch, storage, and optionally the azure\ncontainer registry) need to be acquired. The strategy employed in this demo\nis to log in to the Azure CLI (\\`az login\\`) and export the necessary\ncredentials as environment variables. This allows writing credential free\ncode and letting the Azure CLI handle the Authentication and Authorization.\n\nAfter exporting these credentials, the code in \\`controller.py\\` is executed\nin the same terminal session, and \\`super_batch\\` can use them to access the\nrequired Azure resources.\n`\n\n\nconst USING_ACR = `\n## Using Azure Container Registry\n\nIf you wish to use a private Azure Container Registry, use the following code to\ncreate an ACR instance and the export the required credentials:\n`\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            \"& p code\": {\n                backgroundColor: \"#cadceb\",\n                padding: \"0.125rem\",\n                paddingLeft: \"0.2rem\",\n                paddingRight: \"0.2rem\",\n                borderRadius: \"0.125rem\"\n            }\n        }\n    }),\n);\n\n\n\nexport function AzureResources() {\n    const [value, setValue] = React.useState<number>(0);\n    const classes = useStyles()\n\n    return (<div className={classes.root}>\n        <StyledMarkdown source={INTRO} />\n        <CreateResources value={value} setValue={setValue} />\n        <StyledMarkdown source={tip} />\n\n        <StyledMarkdown source={GATHER_CREDENTIALS} />\n        <GatherCredentials value={value} setValue={setValue} />\n\n        <StyledMarkdown source={USING_ACR} />\n        <UsingACR value={value} setValue={setValue} />\n    </div>)\n\n}\n\nexport default AzureResources\n","import React from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport clsx from \"clsx\"\nimport { IRouteName } from \"./App\"\nimport { Link } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        drawer: {\n            backgroundColor: \"#49494d\",\n            color: \"#e6e6eb\",\n            paddingLeft: \".8rem\",\n            paddingTop: \".8rem\",\n            height: \"100%\",\n            \"& a\": {\n                \"color\": \"inherit\",\n                \"text-decoration\": \"none\",\n                \"outline\": \"none\",\n            }\n\n        },\n        item: {\n            fontSize: 13,\n            padding: theme.spacing(0.5, 0, 0.5, 1),\n            borderLeft: '4px solid transparent',\n            boxSizing: 'content-box',\n            '&:hover': {\n                borderLeft: `4px solid ${\n                    theme.palette.type === 'light' ? theme.palette.grey[100] : theme.palette.grey[500]\n                    }`,\n            },\n        },\n        active: {\n            borderLeft: `4px solid ${\n                theme.palette.type === 'light' ? theme.palette.grey[500] : theme.palette.grey[900]\n                }`,\n        },\n        itemSecondary: {\n            paddingLeft: \"1.6rem\"\n        },\n        ul: {\n            padding: 0,\n            margin: 0,\n            listStyle: 'none',\n            textDecoration: \"none\",\n        },\n        nested: {\n            paddingLeft: theme.spacing(4),\n        },\n        link: {\n            textDecoration: \"none\",\n        }\n    }),\n);\n\nconst CODE_PAGES: [string, IRouteName][] = [\n    [\"Create Azure Resources\", \"/create-resources\",],\n    [\"Refactoring your Code\", \"/refactoring\",],\n    [\"The Task Worker\", \"/worker\",],\n    [\"Build the Docker Image\", \"/building-with-docker\",],\n    [\"The Controller\", \"/controller\"],\n    [\"Clean Up\", \"/cleanup\"],\n]\n\n//   \"/api\"\n//   \"/\"\n//   \"/worker\"\n//   \"/faq\";\n\n\nconst NestedList: React.SFC<RouteComponentProps> = (props) => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    console.log(\"nav-props:\")\n    console.dir(props)\n\n    const handleClick = () => {\n        setOpen(!open);\n    };\n\n    return (\n        <div className={classes.drawer}>\n            <Typography\n                component=\"ul\"\n                aria-labelledby=\"nested-list-subheader\"\n                className={classes.ul}\n            >\n                <Link to=\"/\" className={classes.link} style={{ textDecoration: 'none', color: \"inherit\" }}>\n                    <li className={clsx(classes.item, props.location.pathname === \"/\" ? classes.active : null)} >\n                        <ListItemText primary=\"Overview\" />\n                    </li>\n                </Link>\n                <li className={classes.item} onClick={handleClick}>\n                    <ListItemText primary=\"Tutorial\" />\n                </li>\n                <Collapse in={open} timeout=\"auto\" unmountOnExit>\n                    <ul className={classes.ul}>\n                        {CODE_PAGES.map(([name, key]) => (\n                            <Link to={key} key={key}>\n                                <li className={clsx(classes.item,\n                                    classes.itemSecondary,\n                                    props.location.pathname === key ? classes.active : null)}\n                                    key={key} >\n                                    {name}\n                                </li>\n                            </Link>\n\n                        ))}\n                    </ul>\n                </Collapse>\n                <Link to=\"/faq\">\n                    <li className={clsx(classes.item, props.location.pathname === \"/faq\" ? classes.active : null)} >\n                        <ListItemText primary=\"FAQ\" />\n                    </li>\n                </Link>\n                <Link to=\"/api\">\n                    <li className={clsx(classes.item, props.location.pathname === \"/api\" ? classes.active : null)} >\n                        <ListItemText primary=\"API\" />\n                    </li>\n                </Link>\n            </Typography>\n        </div>\n    );\n}\n\nexport default withRouter(NestedList)","import React from 'react';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport NavList from \"./nav-list\";\nimport { makeStyles, useTheme, Theme, createStyles } from '@material-ui/core/styles';\n\nexport const drawerWidth = 220;\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        nav: {\n            [theme.breakpoints.up('sm')]: {\n                width: drawerWidth,\n                flexShrink: 0,\n            },\n        },\n        drawer:{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\"\n        },\n        toolbar: theme.mixins.toolbar,\n        drawerPaper: {\n            width: drawerWidth,\n            display: \"block\",\n        },\n    }),\n\n);\n\ninterface ResponsiveDrawerProps {\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    container?: Element;\n    open: boolean;\n    toggleOpen: ()=> void;\n\n}\n\nexport default function ResponsiveDrawer(props: ResponsiveDrawerProps) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const drawer = (\n        <div className={classes.drawer}>\n            <div className={classes.toolbar} />\n            <NavList/>\n        </div >\n    );\n\n    return (\n\n        <nav className={classes.nav} aria-label=\"mailbox folders\">\n            {/* The implementation can be swapped with js to avoid SEO duplication of links. */}\n            <Hidden smUp implementation=\"css\">\n                <Drawer\n                    variant=\"temporary\"\n                    anchor={theme.direction === 'rtl' ? 'right' : 'left'}\n                    open={props.open}\n                    onClose={props.toggleOpen}\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    ModalProps={{\n                        keepMounted: true, // Better open performance on mobile.\n                    }}\n                    onClick={props.toggleOpen}\n                >\n                    {drawer}\n                </Drawer>\n            </Hidden>\n            <Hidden xsDown implementation=\"css\">\n                <Drawer\n                    classes={{\n                        paper: classes.drawerPaper,\n                    }}\n                    variant=\"permanent\"\n                    open\n                >\n                    {drawer}\n                </Drawer>\n            </Hidden>\n        </nav>\n    );\n}\n","import React, { useEffect } from \"react\"\nimport Prism from 'prismjs';\nimport raw from \"raw.macro\"\nimport StyledMarkdown from \"./styled-markdown\"\n\nexport const API = build(raw(\"./md/api.md\"));\nexport const CleanUp = build(raw(\"./md/cleanup.md\"));\nexport const Refactoring = build(raw(\"./md/refactoring.md\"));\nexport const Controller = build(raw(\"./md/controller.md\"));\nexport const Docker = build(raw(\"./md/docker.md\"));\nexport const FAQ = build(raw(\"./md/faq.md\"));\nexport const Overview = build(raw(\"./md/overview.md\"));\nexport const Worker = build(raw(\"./md/worker.md\"));\n\nfunction build(source: string): React.FC {\n    return () => {\n        useEffect(() => { return Prism.highlightAll(); }, []);\n        return ( <StyledMarkdown source={source} escapeHtml={false} />)\n    }\n}\n","/// <reference path=\"./github-tag.d.ts\" />\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport {\n  createMuiTheme,\n  makeStyles,\n  ThemeProvider,\n} from '@material-ui/core/styles';\nimport Hidden from '@material-ui/core/Hidden';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport GitHubForkRibbon from \"react-github-fork-ribbon\"\n\nimport 'prismjs';\nimport 'prismjs/components/prism-python';\nimport 'prismjs/components/prism-bash';\nimport 'prismjs/components/prism-batch';\nimport 'prismjs/components/prism-powershell';\nimport 'prismjs/components/prism-docker';\nimport 'prismjs/themes/prism-okaidia.css';\nimport AzureResources from \"./pages/azure-resources\"\nimport Drawer, { drawerWidth } from \"./drawer\"\nimport { IconButton } from '@material-ui/core';\nimport MenuIcon from \"@material-ui/icons/Menu\"\n\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n\nimport {\n  API,\n  CleanUp,\n  Controller,\n  Refactoring,\n  Docker as DockerBuild,\n  FAQ,\n  Overview,\n  Worker\n} from \"./pages\"\n\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#44a2ff',\n    },\n    secondary: {\n      main: '#b068f7',\n    }\n\n  }\n});\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\"\n  },\n  menuButton: {\n    color: \"#eee\",\n    marginRight: theme.spacing(2),\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  toolbar: theme.mixins.toolbar,\n  toolbarOption: {\n    marginLeft: \"1rem\"\n  },\n  logo: {\n    color: \"#f5c816\"\n  },\n  main: {\n    '& pre': {\n      overflowX: \"auto\"\n    },\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100vw - ${drawerWidth}px)`,\n    },\n    [theme.breakpoints.down('xs')]: {\n      width: `100vw`,\n    },\n    flexGrow: 1,\n    padding: \"2rem\",\n    paddingTop: \"0\",\n    textAlign: \"left\",\n  }\n}));\n\nexport type IRouteName =\n  | \"/api\"\n  | \"/create-resources\"\n  | \"/cleanup\"\n  | \"/controller\"\n  | \"/refactoring\"\n  | \"/building-with-docker\"\n  | \"/\"\n  | \"/worker\"\n  | \"/faq\";\n\n\nfunction App() {\n  const classes = useStyles();\n\n  const [mobileOpen, setMobileOpen] = useState(false);\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n\n    <Router basename={process.env.PUBLIC_URL}>\n      <div className={classes.root}>\n\n\n        <Drawer open={mobileOpen} toggleOpen={handleDrawerToggle} />\n\n        <CssBaseline />\n\n        <ThemeProvider theme={theme}>\n\n          <AppBar position=\"fixed\" className={classes.appBar}>\n\n            <Hidden xsDown implementation=\"css\">\n              <GitHubForkRibbon href=\"//github.com/jdthorpe/batch-config\"\n                target=\"_blank\"\n                position=\"right\"\n                color=\"black\">\n                Fork me on GitHub\n              </GitHubForkRibbon>\n            </Hidden>\n            <Toolbar>\n\n              <Hidden smUp implementation=\"css\">\n                <IconButton\n                  color=\"inherit\"\n                  aria-label=\"open drawer\"\n                  edge=\"start\"\n                  onClick={handleDrawerToggle}\n                  className={classes.menuButton}\n                >\n                  <MenuIcon\n                    fontSize=\"large\"\n                  />\n                </IconButton>\n              </Hidden>\n              <Typography variant=\"h4\" noWrap className={classes.logo}>\n                SuperBatch\n              </Typography>\n            </Toolbar>\n          </AppBar>\n\n\n          <div className={classes.main}>\n            <div className={classes.toolbar} />\n\n            <Switch>\n              <Route exact={true} path=\"/api\"> <API /></Route>\n              <Route exact={true} path=\"/create-resources\"> <AzureResources /></Route>\n              <Route exact={true} path=\"/cleanup\"> <CleanUp /></Route>\n              <Route exact={true} path=\"/controller\"> <Controller /></Route>\n              <Route exact={true} path=\"/refactoring\"> <Refactoring /></Route>\n              <Route exact={true} path=\"/building-with-docker\"> <DockerBuild /></Route>\n              <Route exact={true} path=\"/\"> <Overview /></Route>\n              <Route exact={true} path=\"/worker\"> <Worker /></Route>\n              <Route exact={true} path=\"/faq\"> <FAQ /></Route>\n            </Switch>\n          </div>\n\n        </ThemeProvider >\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}